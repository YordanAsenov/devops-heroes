name: devops-heroes

volumes:
  gitlab-data: {}
  gitlab-config: {}
  gitlab-logs: {}
  gitlab-runner-config: {}
  gitlab-runner-home: {}
  certificate-authority-private-key: {}
  gitlab-private-key: {}
  gitlab-registry-private-key: {}
  registry-private-key: {}
  certificates: {}
  container-registry-data: {}

secrets:
  gitlab_root_password:
    file: ./volumes/gitlab/secrets/root_password.txt
  registry_notification_secret:
    file: ./volumes/container_registry/secrets/notification_secret.txt

networks:
  gitlab:
    driver: bridge

services:
  certificate_authority:
    image: alpine/openssl:3.3.3
    container_name: certificate_authority
    volumes:
      - certificate-authority-private-key:/certificate-authority
      - gitlab-private-key:/gitlab
      - registry-private-key:/registry
      - certificates:/ca/certs
      - ./volumes/certificate_authority/config/openssl.cnf:/etc/ssl/openssl.cnf
      - ./volumes/certificate_authority/script/generate_certs.sh:/generate_certs.sh
    entrypoint: "/generate_certs.sh"

  gitlab:
    image: gitlab/gitlab-ce:17.10.0-ce.0
    container_name: gitlab
    volumes:
      - gitlab-data:/var/opt/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-config:/etc/gitlab
      - ./volumes/gitlab/config/gitlab.rb:/etc/gitlab/gitlab.rb
      - certificates:/etc/gitlab/trusted-certs
      - certificates:/etc/gitlab/ssl/certificates
      - gitlab-private-key:/etc/gitlab/ssl/private
      - gitlab-registry-private-key:/etc/gitlab/ssl/gitlab-registry
    ports:
      - "39000:80"
      - "22:22"
      - "443:443"
    secrets:
      - gitlab_root_password
      - registry_notification_secret
    networks:
      gitlab:
        aliases:
          - "gitlab.devops-heroes.com"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.rule=Host(`gitlab.devops-heroes.com`)"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
    depends_on:
      certificate_authority:
        condition: service_completed_successfully
    restart: unless-stopped

  gitlab-runner-1:
    image: gitlab/gitlab-runner:v17.10.0
    container_name: gitlab-runner-1
    volumes:
      - ./volumes/gitlab-runner/config/runner-config.toml:/etc/gitlab-runner/config.toml
      - /var/run/docker.sock:/var/run/docker.sock
      - certificates:/etc/gitlab-runner/certs:ro
      - gitlab-runner-config:/etc/gitlab-runner
      - gitlab-runner-home:/home/gitlab-runner
    networks:
      - gitlab
    environment:
      - TZ=Europe/Rome
    labels:
      - "traefik.enable=false"
    depends_on:
      gitlab:
        condition: service_healthy
    restart: unless-stopped

  reverse-proxy:
    image: traefik:v3.3.4
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/traefik/config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - certificate-authority-private-key:/etc/traefik/private-keys/ca:ro
      - gitlab-private-key:/etc/traefik/private-keys/gitlab:ro
      - registry-private-key:/etc/traefik/private-keys/registry:ro
      - certificates:/etc/traefik/certs:ro
    networks:
      - gitlab
    depends_on:
      certificate_authority:
        condition: service_completed_successfully
    restart: unless-stopped
  
  container_registry:
    image: registry:2.8.3
    container_name: container_registry
    ports:
      - "5000:5000"
    volumes:
      - container-registry-data:/var/lib/registry
      - certificates:/certs
      - registry-private-key:/registry-private-key
      - gitlab-registry-private-key:/gitlab-registry-private-key
      - ./volumes/container_registry/config/config.yml:/etc/docker/registry/config.yml:ro
      - ./volumes/container_registry/script/boot.sh:/boot.sh
    secrets:
      - registry_notification_secret
    networks:
      gitlab:
        aliases:
          - "registry.devops-heroes.com"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.registry.rule=Host(`registry.devops-heroes.com`)"
      - "traefik.http.services.registry.loadbalancer.server.port=5000"
      - "traefik.http.routers.registry.tls=true"
      - "traefik.http.routers.registry.tls.certresolver=default"
    entrypoint: ["/bin/sh", "/boot.sh"]
    depends_on:
      certificate_authority:
        condition: service_completed_successfully
    restart: unless-stopped